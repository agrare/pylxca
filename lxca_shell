#!/usr/bin/env python 
'''
@since: 15 Sep 2015
@author: Prashant Bhosale <pbhosale@lenovo.com>, Girish Kumar <gkumar1@lenovo.com>
@license: Lenovo License
@copyright: Copyright 2016, Lenovo
@organization: Lenovo Group Ltd
@summary: The main script for PYLXCA Tool, It creates a shell and accept raw input to process it.

'''

import os, time, code
import signal, time, sys

from pylxca.pylxca_cmd import lxca_icommands,lxca_ishell, lxca_pyshell
from pylxca.pylxca_cmd.lxca_ishell import PYTHON_SHELL
from pylxca.pylxca_cmd.lxca_pyshell import pyshell

class Application(object):
    def __init__(self): 
        self.client = None

    def run(self):
        global shell
        shell = lxca_ishell.InteractiveShell(banner="Welcome to PyLXCA Shell v1.0", prompt="PyLXCA >> ")
        if shell.run() == PYTHON_SHELL:
            pyshell(shell=shell, interactive=True) 

def handle_ctrl_c(signum, frame):
    # restore the original signal handler as otherwise evil things will happen
    # in raw_input when CTRL+C is pressed, and our signal handler is not re-entrant
    signal.signal(signal.SIGINT, original_sigint)
    print '\nKeyboardInterrupt: Press ctrl+D to exit'
    
    # restore the exit gracefully handler here
    signal.signal(signal.SIGINT, handle_ctrl_c)


def main():
    app = Application()
    app.run()


if __name__ == "__main__":
    original_sigint = signal.getsignal(signal.SIGINT)
    signal.signal(signal.SIGINT, handle_ctrl_c)
    main()
