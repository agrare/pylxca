{
	"connect": {
		"description": "Connect to LXCA",
		"additional_detail": ["The following example connects to the Lenovo XClarity Administrator server using the HTTPS address 192.0.2.0 and user ID USER1.",
			"connect --url https://192.0.2.0 --user USER1 --noverify"],
		"cmd_args": [
			[{
					"args": "-l,--url",
					"opt_dict": {
						"help": "Url of lxca",
						"required": true
					}
				}
			],
			[{
					"args": "-u,--user",
					"opt_dict": {
						"help": "user of lxca",
						"required": true
					}
				}
			],
			[{
					"args": "-p,--pw",
					"opt_dict": {
						"help": "password of lxca"
					}
				}
			],
			[{
					"args": "--noverify",
					"opt_dict": {
						"help": "Verify certificate",
						"const": false,
						"nargs": "?",
						"default": false
					}
				}
			]
		]
	},

	"disconnect": {
		"description": "Disconnect session from LXCA",
		"cmd_args": [
			[{
					"args": "-c,--con",
					"opt_dict": {
						"help": "connection object"
					}
				}
			]
		]
	},

	"nodes": {
		"description": "Get nodes inventory",
		"cmd_args": [
			[{
					"args": "-v,--view",
					"opt_dict": {
						"help": "view for interactive shell"
					}
				}
			],
			[{
					"args": "-s,--status",
					"opt_dict": {
						"help": "list nodes with status",
						"choices": [
							"managed",
							"unmanaged"
						]
					}
				}
			]
		],
		"mutually_exclusive_args": [
			[{
					"args": "-u,--uuid",
					"opt_dict": {
						"help": "uuid of device"
					}
				}
			],
			[{
					"args": "-c,--chassis",
					"opt_dict": {
						"help": "uuid of chassis"
					}
				}
			]
		]
	},

	"chassis": {
		"description": "Get chassis inventory",
		"cmd_args": [
			[{
					"args": "-v,--view",
					"opt_dict": {
						"help": "view for interactive shell"
					}
				}
			],

			[{
					"args": "-u,--uuid",
					"opt_dict": {
						"help": "uuid of device"
					}
				}
			],
			[{
					"args": "-s,--status",
					"opt_dict": {
						"help": "list nodes with status",
						"choices": ["managed", "unmanaged"]
					}
				}
			]
		]
	},

	"cmms": {
		"description": "Get cmms inventory",
		"cmd_args": [
			[{
					"args": "-v,--view",
					"opt_dict": {
						"help": "view for interactive shell"
					}
				}
			]
		],
		"mutually_exclusive_args": [
			[{
					"args": "-u,--uuid",
					"opt_dict": {
						"help": "uuid of device"
					}
				}
			],
			[{
					"args": "-c,--chassis",
					"opt_dict": {
						"help": "uuid of chassis"
					}
				}
			]
		]
	},

	"fans": {
		"description": "Get fans inventory",
		"cmd_args": [
			[{
					"args": "-v,--view",
					"opt_dict": {
						"help": "view for interactive shell"
					}
				}
			]
		],
		"mutually_exclusive_args": [
			[{
					"args": "-u,--uuid",
					"opt_dict": {
						"help": "uuid of device"
					}
				}
			],
			[{
					"args": "-c,--chassis",
					"opt_dict": {
						"help": "uuid of chassis"
					}
				}
			]
		]
	},

	"fanmuxes": {
		"description": "Get fanmuxes inventory",
		"cmd_args": [
			[{
					"args": "-v,--view",
					"opt_dict": {
						"help": "view for interactive shell"
					}
				}
			]
		],
		"mutually_exclusive_args": [
			[{
					"args": "-u,--uuid",
					"opt_dict": {
						"help": "uuid of device"
					}
				}
			],
			[{
					"args": "-c,--chassis",
					"opt_dict": {
						"help": "uuid of chassis"
					}
				}
			]
		]
	},

	"powersupplies": {
		"description": "Get Power Supply inventory",
		"cmd_args": [
			[{
					"args": "-v,--view",
					"opt_dict": {
						"help": "view for interactive shell"
					}
				}
			]
		],
		"mutually_exclusive_args": [
			[{
					"args": "-u,--uuid",
					"opt_dict": {
						"help": "uuid of device"
					}
				}
			],
			[{
					"args": "-c,--chassis",
					"opt_dict": {
						"help": "uuid of chassis"
					}
				}
			]
		]
	},

	"scalablesystem": {
		"description": "Get Scalable Complex System inventory",
		"cmd_args": [
			[{
					"args": "-v,--view",
					"opt_dict": {
						"help": "view for interactive shell"
					}
				}
			],
			[{
					"args": "-i,--id",
					"opt_dict": {
						"help": "Scalable Complex Id"
					}
				}
			],
			[{
					"args": "-t,--type",
					"opt_dict": {
						"help": "Scalable Complex type",
						"choices": [
							"flex",
							"rackserver"
						]
					}
				}
			]
		]
	},

	"switches": {
		"description": "Get switches inventory",
		"additional_detail": ["The following example returns inventory data for all Flex System switches in the specified chassis.",
			"switches -c B8106786386411E19AE3EF8BCD385476",
			"The following example enables a port on the specified switch.",
			"switches -u A5678986386411E19AE3EF8BCF385743 --ports Ethernet1/1 --action enable"],
		"cmd_args": [
			[{
					"args": "-v,--view",
					"opt_dict": {
						"help": "view for interactive shell"
					}
				}
			],
			[{
					"args": "-p,--ports",
					"opt_dict": {
						"help": "ports of switch, empty ports list all ports of specific uuid switch"
					}
				}
			],
			[{
					"args": "-a,--action",
					"opt_dict": {
						"help": "specifies action to take on specified ports",
						"choices": [
							"enable",
							"disable"
						]
					}
				}
			]

		],
		"mutually_exclusive_args": [
			[{
					"args": "-u,--uuid",
					"opt_dict": {
						"help": "uuid of device"
					}
				}
			],
			[{
					"args": "-c,--chassis",
					"opt_dict": {
						"help": "uuid of chassis"
					}
				}
			]
		]
	},

	"discover": {
		"description": "Retrieve a list of devices discovered by SLP discovery.",
		"additional_detail": ["The following example discovers devices with the specified IP addresses.",
			"discover -i 2.222.22.22,3.333.33.33",
			"The following example retrieves status information about the specified discovery job.",
			"discover -j 22"],
		"cmd_args": [
			[{
					"args": "-v,--view",
					"opt_dict": {
						"help": "view for interactive shell"
					}
				}
			]
          ],
        "mutually_exclusive_args": [
			[{
					"args": "-i,--ip",
					"opt_dict": {
						"help": "ip of device"
					}
				}
			],
			[{
					"args": "-j,--job",
					"opt_dict": {
						"help": "job id"
					}
				}
			]

		]
	},

	"log": {
		"description": "Get/set log level of Python LXCA",
		"cmd_args": [
			[{
					"args": "-l,--lvl",
					"opt_dict": {
						"help": "set log level"
					}
				}
			]
		]
	},

	"lxcalog": {
		"description": "Retrieve hardware and management-server events in the events log.",
		"cmd_args": [
			[{
					"args": "-f,--filter",
					"opt_dict": {
						"help": "set log level"
					}
				}
			]
		]
	},

	"ostream": {
		"description": "Set ostream level of PYLXCA Interactive Shell",
		"cmd_args": [
			[{
					"args": "-l,--lvl",
					"opt_dict": {
						"help": "set log level"
					}
				}
			]
		]
	},

	"users": {
		"description": "Retrieve information about user account of Lenovo XClarity Administrator.",
		"cmd_args": [
			[{
					"args": "-i,--id",
					"opt_dict": {
						"help": "Id of User"
					}
				}
			],
            [{
                    "args": "-v,--view",
                    "opt_dict": {
                        "help": "view for interactive shell"
                    }
                }
            ]
		]
	},

	"ffdc": {
		"description": "Collect and export the first failure data capture (FFDC) data for a specific managed endpoint (CMM, server, storage node, or switch).",
		"cmd_args": [
			[{
					"args": "-u,--uuid",
					"opt_dict": {
						"help": "Specifies the UUID of a device",
						"required": true
					}
				}
			]
		]
	},

	"tasks": {
		"description": "get tasks detail from LXCA",
		"cmd_args": [
			[{
					"args": "-v,--view",
					"opt_dict": {
						"help": "view for interactive shell"
					}
				}
			],

			[{
					"args": "-j,--jobUID",
					"opt_dict": {
						"help": "task Id of task"
					}
				}
			],
			[{
					"args": "-c,--children",
					"opt_dict": {
						"help": "include children details",
						"default": false
					}
				}
			],
			[{
					"args": "-a,--action",
					"opt_dict": {
						"help": "action to perform",
						"choices": ["cancel", "update", "delete"]
					}
				}
			],
			[{
					"args": "-u,--updateList",
					"opt_dict": {
						"help": "List of dict of change, required with action update",
						"type": "ast.literal_eval"
					}
				}
			]
		]
	},

	"unmanage": {
      "description": "Unmanage device on LXCA",
      "additional_detail": ["The following example unmanages a device with a specific IP address.",
                            "unmanage device –e 192.0.2.44;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;Rack-Tower Server"],
      "add_help": true,
      "subcmd": [
        {
          "name": "device",
          "additional_detail": ["The following example unmanages a device with a specific IP address.",
                            "unmanage device –e 192.0.2.44;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;Rack-Tower Server"],
          "help": "Unmanage managed device",
          "subcmd_args": [
            [
              {
                "args": "-v,--view",
                "opt_dict": {
                  "help": "view for interactive shell"
                }
              }
            ],
            [
              {
                "args": "-i,--ip",
                "opt_dict": {
                  "help": "Specifies a set of properties for one or more devices to be unmanaged"
                }
              }
            ],
            [
              {
                "args": "-f,--force",
                "opt_dict": {
                  "help": "Force manage"
                }
              }
            ]
          ]
        },
        {
          "name": "job_status",
          "additional_detail": ["The following example get status of unmanages job with id 12.",
                                "unmanage job_status –j 12"],

          "help": "Get unmanage job status",
          "subcmd_args": [
            [
              {
                "args": "-v,--view",
                "opt_dict": {
                  "help": "view for interactive shell"
                }
              }
            ],
            [
              {
                "args": "-j,--job",
                "opt_dict": {
                  "help": "job id of unmanage job",
                  "type": "int"
                }
              }
            ]
          ]
        }
      ]
    },

		"manage": {
			"description": "manage device on LXCA",
            "additional_detail": ["The following example manages a device using a user account.",
                                  "manage device -i 192.0.2.22 -u USERID -p xxxxxxxx -r xxxxxxxx",
                                  "The following example manages a device using a stored-credential account.",
                                  "manage device -i 192.0.2.23 -s AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -r xxxxxxxx],"],
			"add_help": true,
            "valid_combination": [["ip", "user","pw"],
                                  ["ip", "storedcredential_id"],
                                  ["job"]],
			"subcmd": [{
					"name": "device",
                    "additional_detail": ["The following example manages a device using a user account.",
                                  "manage device -i 192.0.2.22 -u USERID -p xxxxxxxx -r xxxxxxxx",
                                  "The following example manages a device using a stored-credential account.",
                                  "manage device -i 192.0.2.23 -s AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA -r xxxxxxxx],"],

					"help": "Manage discovered device",
					"subcmd_args": [
						[{
								"args": "-v,--view",
								"opt_dict": {
									"help": "view for interactive shell"
								}
							}
						],

						[{
								"args": "-i,--ip",
								"opt_dict": {
									"help": "ip of Device",
                                    "required": true
								}
							}
						],
						[{
								"args": "-p,--pw",
								"opt_dict": {
									"help": "device passw0rd"
								}
							}
						],
						[{
								"args": "-r,--rpw",
								"opt_dict": {
									"help": "device restore passw0rd"
								}
							}
						],

                        [{
								"args": "-f,--force",
								"opt_dict": {
									"help": "Force manage"
								}
							}
						]
					],
					"mutually_exclusive_args": [
						[{
								"args": "-u,--user",
								"opt_dict": {
									"help": "device user"
								}
							}
						],
                        [{
								"args": "-s,--storedcredential_id",
								"opt_dict": {
									"help": "device storedcredential id"
								}
							}
						]
                    ]

				}, {
					"name": "job_status",
					"help": "Get manage job status",
                    "additional_detail": ["The following example returns information about a specific management job.",
                                          "manage job_status -j 4"],
					"subcmd_args": [
						[{
								"args": "-v,--view",
								"opt_dict": {
									"help": "view for interactive shell"
								}
							}
						],

						[{
								"args": "-j,--job",
								"opt_dict": {
									"help": "job id of manage job",
									"type": "int",
                                    "required": true
								}
							}
						]
					]
				}
			]
		},
	"configtargets": {
		"description": "Retrieve a list of deployable target systems according to their\n\t\t\tserver pattern and profile.",
		"cmd_args": [
			[{
					"args": "-i,--id",
					"opt_dict": {
						"help": "Specifies the UUID of a device",
						"required": true
					}
				}
			],
            [{
                    "args": "-v,--view",
                    "opt_dict": {
                        "help": "view for interactive shell"
                    }
                }
            ]
		]
	},
  	"configpatterns": {
      "description": "Retrieve information and deploy all server and category patterns that have been defined in the Lenovo XClarity Administrator",
      "additional_detail": ["Config patterns "],
      "add_help": true,
      "subcmd": [
        {
          "name": "list",
          "additional_detail": ["The following example returns information about all server patterns.",
                                "configpatterns list",
                                "The following example returns information about a specific server pattern.",
                                "configpatterns list -i 48"],
          "help": "list server config patterns and details",
          "subcmd_args": [
            [
              {
                "args": "-v,--view",
                "opt_dict": {
                  "help": "view for interactive shell"
                }
              }
            ],
            [
              {
                "args": "-i,--id",
                "opt_dict": {
                  "help": "Specifies the ID of the server pattern. If an ID is not specified, all server patterns are returned"
                }
              }
            ],
            [
              {
                "args": "--includeSettings",
                "opt_dict": {
                  "help": "Include details of category patterns that are reference by the server pattern"
                }
              }
            ]
          ]
        },
        {
          "name": "apply",
          "additional_detail": ["The following example apply pattern to endpoint",
                                "configpatterns apply --id 65 --endpoint B918EDCA1B5F11E2803EBECB82710ADE --restart pending --type node",
                                "configpatterns apply --name From_abcdef --endpoint B918EDCA1B5F11E2803EBECB82710ADE --restart pending --type node"],

          "help": "Apply config pattern to device",
          "subcmd_args": [
            [
              {
                "args": "-v,--view",
                "opt_dict": {
                  "help": "view for interactive shell"
                }
              }
            ],
            [
              {
                "args": "-e,--endpoint",
                "opt_dict": {
                  "help": "Specifies the UUIDs of one or more target servers. If a target is an empty bay, specify the location ID; otherwise, specify the server UUID",
                  "required": true
                }
              }
            ],
            [
              {
                "args": "-r,--restart",
                "opt_dict": {
                  "help": "Identifies when to activate the configurations",
                  "required": true,
                  "choices": [
                      "defer",
                      "immediate",
                      "pending"
                  ]
                }
              }
            ],
            [
              {
                "args": "-t,--type",
                "opt_dict": {
                  "help": "Type of the server",
                  "required": true,
                  "choices": [
                      "node",
                      "rack",
                      "tower",
                      "flex"
                  ]
                }
              }
            ]
          ],
          "mutually_exclusive_args": [
              [{
                      "args": "-i,--id",
                      "opt_dict": {
                          "help": "Config Pattern Id"
                      }
                  }
              ],
              [{
                      "args": "-n,--name",
                      "opt_dict": {
                          "help": "Config Pattern Name"
                      }
                  }
              ]
          ]
        },
        {
          "name": "import",
          "additional_detail": ["The following example import system category pattern",
                                "configpatterns import -p '{\"template_type\":\"SystemInfo\",\"template\":{\"contact\":\"contact\",\"description\":\"Pattern created by test API\",\"location\":\"location\",\"name\":\"Learned-System_Info-99\",\"systemName\":{\"autogen\":\"Disable\",\"hyphenChecked\":false},\"type\":\"SystemInfo\",\"uri\":\"/config/template/61\",\"userDefined\":true}}'"],
          "help": "import server and category config patterns to Lxca",
          "subcmd_args": [
            [
              {
                "args": "-v,--view",
                "opt_dict": {
                  "help": "view for interactive shell"
                }
              }
            ],
            [
              {
                "args": "-p,--pattern_update_dict",
                "opt_dict": {
                  "help": "Pattern dict",
                  "required": true,
                  "type": "json.loads"
                }
              }
            ]
          ]
        },
        {
          "name": "status",
          "additional_detail": ["The following example get config status",
                                "configpatterns status -e B918EDCA1B5F11E2803EBECB82710ADE "],

          "help": "check config status of endpoint",
          "subcmd_args": [
            [
              {
                "args": "-v,--view",
                "opt_dict": {
                  "help": "view for interactive shell"
                }
              }
            ],
            [
              {
                "args": "-e,--endpoint",
                "opt_dict": {
                  "help": "uuid of server",
                  "required": true,
                  "type": "json.loads"
                }
              }
            ],
            [
              {
                "args": "-s,--status",
                "opt_dict": {
                  "help": "Status set to true",
                  "type": "bool",
                  "default": true
                }
              }
            ]
          ]
        }
      ]
    }

}